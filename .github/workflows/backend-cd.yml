name: Backend CI / CD

on:
  pull_request:
    branches:
      - dev-be
  push:
    branches:
      - dev
      - main

permissions:
  id-token: write
  contents: read

jobs:
  backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: |
          cd backend && ./gradlew build -x test

      - name: Check jar file exists
        run: |
          ls -al backend/build/libs

      - name: Zip build output
        run: |
          mkdir -p deploy/scripts
          cp backend/build/libs/*SNAPSHOT.jar deploy/app.jar
          cp backend/appspec.yml deploy/
          cp backend/scripts/deploy.sh deploy/scripts/
          chmod +x deploy/scripts/deploy.sh
          cd deploy && zip -r ../deploy.zip .

      - name: Verify zip contents
        run: unzip -l deploy.zip

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.ROLE_ARN }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp ./deploy.zip s3://${{ secrets.BUCKET_NAME }}/backend/deploy.zip

      - name: Trigger CodeDeploy
        id: trigger
        run: |
          DEPLOYMENT_ID=$(aws deploy create-deployment \
            --application-name ${{ secrets.DEPLOY_NAME }} \
            --deployment-group-name ${{ secrets.DEPLOY_GROUP }} \
            --s3-location bucket=${{ secrets.BUCKET_NAME }},key=backend/deploy.zip,bundleType=zip \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --region ap-northeast-2 \
            --query "deploymentId" \
            --output text)

          echo "DEPLOYMENT_ID=$DEPLOYMENT_ID" >> $GITHUB_ENV
          echo "deployment_id=$DEPLOYMENT_ID" >> $GITHUB_OUTPUT
          echo "✅ CodeDeploy deployment created: $DEPLOYMENT_ID"

      - name: Wait for deployment to complete
        run: |
          STATUS="InProgress"
          TIMEOUT=600
          INTERVAL=10
          ELAPSED=0

          while [[ "$STATUS" == "InProgress" || "$STATUS" == "Created" || "$STATUS" == "Queued" ]]; do
            if [ "$ELAPSED" -ge "$TIMEOUT" ]; then
              echo "❌ Timeout waiting for deployment to finish."
              exit 1
            fi

            STATUS=$(aws deploy get-deployment \
              --region ap-northeast-2 \
              --deployment-id "$DEPLOYMENT_ID" \
              --query "deploymentInfo.status" \
              --output text)

            echo "⌛ Deployment status: $STATUS"
            sleep $INTERVAL
            ELAPSED=$((ELAPSED + INTERVAL))
          done

          if [ "$STATUS" != "Succeeded" ]; then
            echo "❌ Deployment failed with status: $STATUS"
            exit 1
          fi

          echo "✅ Deployment succeeded!"
