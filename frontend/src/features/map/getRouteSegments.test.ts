import getRouteSegments from "@/features/map/getRouteSegments.util";

const TEST_PATH = [
  { lat: 37.65350753605161, lng: 127.05272873217041 },
  { lat: 37.65325505753623, lng: 127.05318184012343 },
  { lat: 37.65311067453145, lng: 127.05368035131548 },
  { lat: 37.65311036317523, lng: 127.05436027948892 },
  { lat: 37.65311019551619, lng: 127.0547229078438 },
];

describe("전체 경로를 지정된 크기로 분할한다.", () => {
  it.each([
    {
      label: "지정된 크기가 2이면, 경로를 2개씩 묶어 정상적으로 반환한다.",
      size: 2,
      expected: [
        [
          { lat: 37.65350753605161, lng: 127.05272873217041 },
          { lat: 37.65325505753623, lng: 127.05318184012343 },
        ],
        [
          { lat: 37.65311067453145, lng: 127.05368035131548 },
          { lat: 37.65311036317523, lng: 127.05436027948892 },
        ],
        [{ lat: 37.65311019551619, lng: 127.0547229078438 }],
      ],
    },
    {
      label: "지정된 크기가 3이면, 마지막 분할된 경로는 2개만 포함된다.",
      size: 3,
      expected: [
        [
          { lat: 37.65350753605161, lng: 127.05272873217041 },
          { lat: 37.65325505753623, lng: 127.05318184012343 },
          { lat: 37.65311067453145, lng: 127.05368035131548 },
        ],
        [
          { lat: 37.65311036317523, lng: 127.05436027948892 },
          { lat: 37.65311019551619, lng: 127.0547229078438 },
        ],
      ],
    },
    {
      label: "지정된 크기가 음수 또는 0 이하라면 빈 배열을 반환한다.",
      size: -1,
      expected: [],
    },
  ])("$label", ({ size, expected }) => {
    expect(getRouteSegments({ path: TEST_PATH, size })).toEqual(expected);
  });
});
